* emacs-data
This is a repository that contains data about various versions of Emacs.
At present, it contains lists of built-in libraries of recent releases and the Git version.
This will be used for another Nix project of mine, which is related to building Emacs configuration with Nix.
Thus the data is provided via a Nix flake API.

While [[https://github.com/purcell/package-lint/][package-lint]] contains similar data for linting packages, this project serves a different purpose, so there are significant differences between them:

- It collects data about unstable versions as well.
- It does not run Emacs, but it checks out the source repository of Emacs and find all source files matching a particular pattern. The result is based on file names, and not on provided features.
- Rather than storing diffs between versions, it keeps a complete snapshot of data from each version. If you are interested, you can use your favourite diff program to compare changes.

Because it only collects data from static source trees, it runs very fast!
Also, it is easy to add support for new versions.
** Usage
Add an input to your =flake.nix= as a *non-flake*:

#+begin_src nix
    inputs.emacs-data = {
      url = "github:akirak/emacs-data";
      flake = false;
    };
  #+end_src

Then import =default.nix=, from which you can use the API:

#+begin_src nix
  let
    emacs-data = import inputs.emacs-data;
  in
    # Return a list of supported Emacs versions
    emacs-data.emacsVersions
    # Return a list of built-in libraries
    emacs-data.getBuiltinLibraryList "27.2"
    # Same as above, but returns null if the version is unavailable
    emacs-data.getBuiltinLibraryListSafe "27.2"
#+end_src

Alternatively, a Nix flake API is available under =lib=, but it will import a lot of inputs into your =flake.lock=, which may not be what you want. I will recommend the classic, non-flake importing describe above.
