* emacs-data
This is a repository that contains generated data about different versions of Emacs.
At present, it contains lists of Emacs Lisp libraries shipped with Emacs itself.
This will be used in another Nix project of mine.
Thus the data is provided via a Nix API.

While [[https://github.com/purcell/package-lint/][package-lint]] contains somewhat similar data which is used for linting packages, this project serves a different purpose, so the data provided by the project is significantly different in that:

- It collects data about unstable versions as well.
- It does not run Emacs. It checks out the source repository of Emacs and find all source files meeting a certain criteria. The resulting library list is based solely on file names, and not on /features/ as referred to in =require= forms.
- Rather than storing diffs between versions, it keeps a complete snapshot of data from each version.

Because it only collects data from static source trees, it runs very fast!
** Usage
Add an input to your =flake.nix= as a *non-flake*:

#+begin_src nix
    inputs.emacs-data = {
      url = "github:akirak/emacs-data";
      flake = false;
    };
  #+end_src

Then import =default.nix=, from which you can use the API:

#+begin_src nix
  let
    emacs-data = import inputs.emacs-data;
  in
    # Return a list of supported Emacs versions
    emacs-data.emacsVersions
    # Return a list of built-in libraries
    emacs-data.getBuiltinLibraryList "27.2"
    # Same as above, but returns null if the version is unavailable
    emacs-data.getBuiltinLibraryListSafe "27.2"
#+end_src

Alternatively, a Nix flake API is available under =lib=, but it will import a lot of inputs into your =flake.lock=, which may not be what you want. I will recommend the classic, non-flake importing describe above.
